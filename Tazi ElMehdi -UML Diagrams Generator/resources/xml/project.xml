<?xml version="1.0" encoding="UTF-8" standalone="no"?><projetjava name="C:/Users/Mehdi/MQL/P05-MultiThreading"><package name="C:/Users/Mehdi/MQL/P05-MultiThreading/bin/org/mql/java/animation"><class name="org.mql.java.animation.Examples$ScreenListner"><fields><field name="counter"/><field name="this$0"/></fields><constructors><constructor name="org.mql.java.animation.Examples$ScreenListner(org.mql.java.animation.Examples)"/></constructors><methods><method name="public void org.mql.java.animation.Examples$ScreenListner.mousePressed(java.awt.event.MouseEvent)"/><method name="public void org.mql.java.animation.Examples$ScreenListner.mouseReleased(java.awt.event.MouseEvent)"/><method name="public void org.mql.java.animation.Examples$ScreenListner.mouseClicked(java.awt.event.MouseEvent)"/><method name="public void org.mql.java.animation.Examples$ScreenListner.mouseExited(java.awt.event.MouseEvent)"/><method name="public void org.mql.java.animation.Examples$ScreenListner.mouseEntered(java.awt.event.MouseEvent)"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.animation.Examples"><fields><field name="serialVersionUID"/><field name="screen"/></fields><constructors><constructor name="public org.mql.java.animation.Examples()"/></constructors><methods><method name="private void org.mql.java.animation.Examples.exp01()"/><method name="private void org.mql.java.animation.Examples.userInterface()"/><method name="public static void org.mql.java.animation.Examples.main(java.lang.String[])"/></methods><superclass>javax.swing.JFrame</superclass><interfaces/></class><class name="org.mql.java.animation.Pingouin"><fields><field name="serialVersionUID"/><field name="runner"/><field name="x"/><field name="y"/><field name="width"/><field name="height"/><field name="src"/><field name="path"/><field name="type"/><field name="images"/><field name="current"/><field name="step"/></fields><constructors><constructor name="public org.mql.java.animation.Pingouin(java.lang.String,int,int)"/></constructors><methods><method name="protected void org.mql.java.animation.Pingouin.paintComponent(java.awt.Graphics)"/><method name="public void org.mql.java.animation.Pingouin.run()"/><method name="public void org.mql.java.animation.Pingouin.start()"/><method name="private void org.mql.java.animation.Pingouin.stop()"/><method name="private static void org.mql.java.animation.Pingouin.pause(int)"/><method name="private void org.mql.java.animation.Pingouin.goLeft(int)"/><method name="private void org.mql.java.animation.Pingouin.goRight(int)"/><method name="private void org.mql.java.animation.Pingouin.loadImages()"/></methods><superclass>javax.swing.JPanel</superclass><interfaces/></class><class name="org.mql.java.animation.Task"><fields><field name="runner"/></fields><constructors><constructor name="public org.mql.java.animation.Task(java.lang.String)"/></constructors><methods><method name="public void org.mql.java.animation.Task.run()"/><method name="public void org.mql.java.animation.Task.start()"/></methods><superclass>java.lang.Object</superclass><interfaces/></class></package><package name="C:/Users/Mehdi/MQL/P05-MultiThreading/bin/org/mql/java"><class name="org.mql.java.Buffer"><fields><field name="data"/><field name="readHead"/><field name="writeHead"/></fields><constructors><constructor name="public org.mql.java.Buffer(int)"/></constructors><methods><method name="public synchronized void org.mql.java.Buffer.write(java.lang.Object)"/><method name="public synchronized java.lang.Object org.mql.java.Buffer.read()"/><method name="public synchronized java.lang.Object[] org.mql.java.Buffer.getData()"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.Consumer"><fields><field name="buffer"/></fields><constructors><constructor name="public org.mql.java.Consumer(java.lang.String,org.mql.java.Buffer)"/></constructors><methods><method name="public void org.mql.java.Consumer.run()"/></methods><superclass>java.lang.Thread</superclass><interfaces/></class><class name="org.mql.java.Context"><fields/><constructors><constructor name="public org.mql.java.Context()"/></constructors><methods><method name="public static void org.mql.java.Context.print(java.lang.String)"/><method name="public static void org.mql.java.Context.pause(int)"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.Examples"><fields/><constructors><constructor name="public org.mql.java.Examples()"/></constructors><methods><method name="void org.mql.java.Examples.exp06()"/><method name="void org.mql.java.Examples.exp02()"/><method name="void org.mql.java.Examples.exp03()"/><method name="void org.mql.java.Examples.exp04()"/><method name="void org.mql.java.Examples.exp05()"/><method name="void org.mql.java.Examples.exp01()"/><method name="public static void org.mql.java.Examples.main(java.lang.String[])"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.IntWriter"><fields><field name="sharedResource"/></fields><constructors><constructor name="public org.mql.java.IntWriter(java.lang.String,java.util.List)"/></constructors><methods><method name="public void org.mql.java.IntWriter.run()"/></methods><superclass>java.lang.Thread</superclass><interfaces/></class><class name="org.mql.java.Processus"><fields/><constructors><constructor name="public org.mql.java.Processus(java.lang.String)"/></constructors><methods><method name="public void org.mql.java.Processus.run()"/></methods><superclass>java.lang.Thread</superclass><interfaces/></class><class name="org.mql.java.Producer"><fields><field name="buffer"/></fields><constructors><constructor name="public org.mql.java.Producer(java.lang.String,org.mql.java.Buffer)"/></constructors><methods><method name="public void org.mql.java.Producer.run()"/></methods><superclass>java.lang.Thread</superclass><interfaces/></class></package><package name="C:/Users/Mehdi/MQL/P05-MultiThreading/bin/org/mql/java/semaphores"><class name="org.mql.java.semaphores.Buffer"><fields><field name="data"/><field name="readHead"/><field name="writeHead"/><field name="logger"/><field name="observers"/><field name="currentWritePosition"/><field name="currentReadPosition"/><field name="currentProducer"/><field name="currentConsumer"/><field name="element"/></fields><constructors><constructor name="public org.mql.java.semaphores.Buffer(int)"/></constructors><methods><method name="private void org.mql.java.semaphores.Buffer.log(java.lang.String)"/><method name="public void org.mql.java.semaphores.Buffer.add(org.mql.java.semaphores.Observer)"/><method name="public void org.mql.java.semaphores.Buffer.write(java.lang.Object)"/><method name="public java.lang.Object org.mql.java.semaphores.Buffer.read()"/><method name="public java.lang.Object[] org.mql.java.semaphores.Buffer.getData()"/><method name="public java.lang.Object org.mql.java.semaphores.Buffer.getElement()"/><method name="public void org.mql.java.semaphores.Buffer.setLogger(org.mql.java.semaphores.Logger)"/><method name="public int org.mql.java.semaphores.Buffer.getReadHead()"/><method name="public java.lang.Thread org.mql.java.semaphores.Buffer.getCurrentProducer()"/><method name="public void org.mql.java.semaphores.Buffer.notifyObservers()"/><method name="public int org.mql.java.semaphores.Buffer.getWriteHead()"/><method name="public java.lang.Thread org.mql.java.semaphores.Buffer.getCurrentConsumer()"/><method name="public int org.mql.java.semaphores.Buffer.getCurrentWritePosition()"/><method name="public int org.mql.java.semaphores.Buffer.getCurrentReadPosition()"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.semaphores.ConsoleLogger"><fields/><constructors><constructor name="public org.mql.java.semaphores.ConsoleLogger()"/></constructors><methods><method name="public void org.mql.java.semaphores.ConsoleLogger.log(java.lang.String,java.lang.String)"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.semaphores.ConsoleObserver"><fields><field name="buffer"/></fields><constructors><constructor name="public org.mql.java.semaphores.ConsoleObserver(org.mql.java.semaphores.Buffer)"/></constructors><methods><method name="public void org.mql.java.semaphores.ConsoleObserver.update()"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.semaphores.Consumer"><fields><field name="m"/><field name="full"/><field name="empty"/><field name="buffer"/></fields><constructors><constructor name="public org.mql.java.semaphores.Consumer(java.lang.String,org.mql.java.semaphores.Buffer,org.mql.java.semaphores.Semaphore,org.mql.java.semaphores.Semaphore,org.mql.java.semaphores.Semaphore)"/><constructor name="public org.mql.java.semaphores.Consumer()"/></constructors><methods><method name="public void org.mql.java.semaphores.Consumer.run()"/><method name="public java.lang.String org.mql.java.semaphores.Consumer.toString()"/></methods><superclass>java.lang.Thread</superclass><interfaces/></class><class name="org.mql.java.semaphores.FileLogger"><fields><field name="source"/><field name="messages"/></fields><constructors><constructor name="public org.mql.java.semaphores.FileLogger(java.lang.String)"/></constructors><methods><method name="public void org.mql.java.semaphores.FileLogger.log(java.lang.String,java.lang.String)"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.semaphores.Logger"><fields/><constructors/><methods><method name="public abstract void org.mql.java.semaphores.Logger.log(java.lang.String,java.lang.String)"/></methods><interfaces/></class><class name="org.mql.java.semaphores.Observer"><fields/><constructors/><methods><method name="public abstract void org.mql.java.semaphores.Observer.update()"/></methods><interfaces/></class><class name="org.mql.java.semaphores.PanelObserver"><fields><field name="serialVersionUID"/><field name="buffer"/><field name="margin"/><field name="size"/><field name="lenght"/></fields><constructors><constructor name="public org.mql.java.semaphores.PanelObserver(org.mql.java.semaphores.Buffer,int)"/></constructors><methods><method name="public java.awt.Dimension org.mql.java.semaphores.PanelObserver.getPreferredSize()"/><method name="protected void org.mql.java.semaphores.PanelObserver.paintComponent(java.awt.Graphics)"/><method name="public void org.mql.java.semaphores.PanelObserver.update()"/></methods><superclass>javax.swing.JPanel</superclass><interfaces/></class><class name="org.mql.java.semaphores.Producer"><fields><field name="m"/><field name="full"/><field name="empty"/><field name="buffer"/></fields><constructors><constructor name="public org.mql.java.semaphores.Producer(java.lang.String,org.mql.java.semaphores.Buffer,org.mql.java.semaphores.Semaphore,org.mql.java.semaphores.Semaphore,org.mql.java.semaphores.Semaphore)"/><constructor name="public org.mql.java.semaphores.Producer()"/></constructors><methods><method name="public void org.mql.java.semaphores.Producer.run()"/><method name="public java.lang.String org.mql.java.semaphores.Producer.toString()"/></methods><superclass>java.lang.Thread</superclass><interfaces/></class><class name="org.mql.java.semaphores.ProducerConsumer"><fields><field name="serialVersionUID"/><field name="buffer"/><field name="producers"/><field name="consumer"/><field name="m"/><field name="empty"/><field name="full"/><field name="observer"/></fields><constructors><constructor name="public org.mql.java.semaphores.ProducerConsumer()"/></constructors><methods><method name="private void org.mql.java.semaphores.ProducerConsumer.userInterface()"/><method name="public static void org.mql.java.semaphores.ProducerConsumer.main(java.lang.String[])"/><method name="private void org.mql.java.semaphores.ProducerConsumer.init()"/><method name="private void org.mql.java.semaphores.ProducerConsumer.createProducers(int)"/><method name="private void org.mql.java.semaphores.ProducerConsumer.createConsumer(int)"/></methods><superclass>javax.swing.JFrame</superclass><interfaces/></class><class name="org.mql.java.semaphores.Semaphore"><fields><field name="name"/><field name="value"/><field name="logger"/><field name="waitingThreadList"/></fields><constructors><constructor name="public org.mql.java.semaphores.Semaphore(java.lang.String)"/><constructor name="public org.mql.java.semaphores.Semaphore(java.lang.String,int)"/></constructors><methods><method name="private void org.mql.java.semaphores.Semaphore.log(java.lang.String,java.lang.String)"/><method name="public synchronized void org.mql.java.semaphores.Semaphore.init(int)"/><method name="private void org.mql.java.semaphores.Semaphore.suspend()"/><method name="private void org.mql.java.semaphores.Semaphore.resume()"/><method name="public void org.mql.java.semaphores.Semaphore.setLogger(org.mql.java.semaphores.Logger)"/><method name="public synchronized void org.mql.java.semaphores.Semaphore.signalDijkstra()"/><method name="public synchronized void org.mql.java.semaphores.Semaphore.waitDijkstra()"/></methods><superclass>java.lang.Object</superclass><interfaces/></class><class name="org.mql.java.semaphores.ThreadList"><fields><field name="name"/><field name="list"/></fields><constructors><constructor name="public org.mql.java.semaphores.ThreadList(java.lang.String)"/></constructors><methods><method name="public java.lang.String org.mql.java.semaphores.ThreadList.getName()"/><method name="public synchronized void org.mql.java.semaphores.ThreadList.remove(java.lang.Thread)"/><method name="public synchronized void org.mql.java.semaphores.ThreadList.add(java.lang.Thread)"/><method name="public java.util.List org.mql.java.semaphores.ThreadList.getList()"/></methods><superclass>java.lang.Object</superclass><interfaces/></class></package></projetjava>